// SPDX-License-Identifier: MIT
pragma solidity >=0.8.6;

contract SolWaifu {
    string name;
    string symbol;
    uint256 decimals;
    uint256 totalSupply;
    address creator;

    function deploy(
        string memory name,
        string memory symbol,
        uint256 decimals,
        uint256 totalSupply,
        address creator
    ) public returns (address tokenAddress) {
        name = name;
        symbol = symbol;
        decimals = decimals;
        totalSupply = totalSupply;
        creator = creator;

        bytes memory bytecode = abi.encodePacked(
            deployCode(),
            entrypointCode(),
            revertHelperCode(),
            totalSupplyCode(),
            balanceOfCode(),
            transferCode(),
            approveCode(),
            allowanceCode(),
            transferFromCode(),
            decimalsCode(),
            nameCode(),
            symbolCode()
        );

        assembly {
            tokenAddress := create(0, add(bytecode, 0x20), mload(bytecode))
        }
    }

    function deployCode() internal view returns (bytes memory) {
        // constructor logic
        return abi.encodePacked(
            PUSH32,
            totalSupply,
            PUSH20,
            creator,
            SSTORE,
            PUSH2,
            hex"0fff",
            PUSH1,
            hex"45",
            PUSH1,
            hex"00",
            CODECOPY,
            PUSH2,
            hex"0fff",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function entrypointCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            PUSH1,
            hex"00",
            CALLDATALOAD,
            PUSH1,
            hex"e0",
            SHR,
            DUP1,
            PUSH4,
            hex"18160ddd",
            EQ,
            PUSH2,
            hex"0074",
            JUMPI,
            DUP1,
            PUSH4,
            hex"70a08231",
            EQ,
            PUSH2,
            hex"009e",
            JUMPI,
            DUP1,
            PUSH4,
            hex"a9059cbb",
            EQ,
            PUSH2,
            hex"00ab",
            JUMPI,
            DUP1,
            PUSH4,
            hex"095ea7b3",
            EQ,
            PUSH2,
            hex"0104",
            JUMPI,
            DUP1,
            PUSH4,
            hex"dd62ed3e",
            EQ,
            PUSH2,
            hex"0155",
            JUMPI,
            DUP1,
            PUSH4,
            hex"23b872dd",
            EQ,
            PUSH2,
            hex"016b",
            JUMPI,
            DUP1,
            PUSH4,
            hex"313ce567",
            EQ,
            PUSH2,
            hex"0221",
            JUMPI,
            DUP1,
            PUSH4,
            hex"06fdde03",
            EQ,
            PUSH2,
            hex"024b",
            JUMPI,
            DUP1,
            PUSH4,
            hex"95d89b41",
            EQ,
            PUSH2,
            hex"02a5",
            JUMPI
        );
    }

    function revertHelperCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH1,
            hex"00",
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            REVERT
        );
    }

    function totalSupplyCode() internal view returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH32,
            totalSupply,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function balanceOfCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            SLOAD,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function transferCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            CALLER,
            SLOAD,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            GT,
            PUSH2,
            hex"0069",
            JUMPI,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            CALLER,
            SLOAD,
            SUB,
            CALLER,
            SSTORE,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            SLOAD,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            ADD,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            SSTORE,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            CALLER,
            PUSH32,
            0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            LOG3,
            PUSH1,
            hex"01",
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function approveCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            CALLER,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"04",
            PUSH1,
            hex"20",
            CALLDATACOPY,
            PUSH1,
            hex"40",
            PUSH1,
            hex"00",
            SHA3,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            SWAP1,
            SSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"24",
            PUSH1,
            hex"00",
            CALLDATACOPY,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            CALLER,
            PUSH32,
            0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            LOG3,
            PUSH1,
            hex"01",
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function allowanceCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH1,
            hex"40",
            PUSH1,
            hex"04",
            PUSH1,
            hex"00",
            CALLDATACOPY,
            PUSH1,
            hex"40",
            PUSH1,
            hex"00",
            SHA3,
            SLOAD,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function transferFromCode() internal pure returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            SLOAD,
            PUSH1,
            hex"44",
            CALLDATALOAD,
            GT,
            PUSH2,
            hex"0069",
            JUMPI,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            PUSH1,
            hex"00",
            MSTORE,
            CALLER,
            PUSH1,
            hex"20",
            MSTORE,
            PUSH1,
            hex"40",
            PUSH1,
            hex"00",
            SHA3,
            SLOAD,
            PUSH1,
            hex"44",
            CALLDATALOAD,
            GT,
            PUSH2,
            hex"0069",
            JUMPI,
            PUSH1,
            hex"40",
            PUSH1,
            hex"00",
            SHA3,
            SLOAD,
            PUSH32,
            0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,
            EQ,
            PUSH2,
            hex"01CC",
            JUMPI,
            PUSH1,
            hex"44",
            CALLDATALOAD,
            PUSH1,
            hex"40",
            PUSH1,
            hex"00",
            SHA3,
            SLOAD,
            SUB,
            PUSH1,
            hex"40",
            PUSH1,
            hex"00",
            SHA3,
            SSTORE,
            JUMPDEST,
            PUSH1,
            hex"44",
            CALLDATALOAD,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            SLOAD,
            SUB,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            SSTORE,
            PUSH1,
            hex"44",
            CALLDATALOAD,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            SLOAD,
            ADD,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            SSTORE,
            PUSH1,
            hex"44",
            CALLDATALOAD,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"24",
            CALLDATALOAD,
            PUSH1,
            hex"04",
            CALLDATALOAD,
            hex"7f",
            0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            LOG3,
            PUSH1,
            hex"01",
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function decimalsCode() internal view returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH32,
            decimals,
            PUSH1,
            hex"00",
            MSTORE,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function nameCode() internal view returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            MSTORE,
            PUSH32,
            bytes(name).length,
            PUSH1,
            hex"20",
            MSTORE,
            uint8(0x5f + bytes(name).length),
            bytes(name),
            PUSH32,
            (32 - bytes(name).length) * 8,
            SHL,
            PUSH1,
            hex"40",
            MSTORE,
            PUSH1,
            hex"60",
            PUSH1,
            hex"00",
            RETURN
        );
    }

    function symbolCode() internal view returns (bytes memory) {
        return abi.encodePacked(
            JUMPDEST,
            PUSH1,
            hex"20",
            PUSH1,
            hex"00",
            MSTORE,
            PUSH32,
            bytes(symbol).length,
            PUSH1,
            hex"20",
            MSTORE,
            uint8(0x5f + bytes(symbol).length),
            bytes(symbol),
            PUSH32,
            (32 - bytes(symbol).length) * 8,
            SHL,
            PUSH1,
            hex"40",
            MSTORE,
            PUSH1,
            hex"60",
            PUSH1,
            hex"00",
            RETURN
        );
    }
}
